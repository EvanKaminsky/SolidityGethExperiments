loadScript("scripts/stats.js")
loadScript("contract-ck/ck.js")
loadScript("scripts/ck-workload.js")
var contracts = contractOutput.contracts;
unlock();
for (var key in contracts) {
var contract_name = key.split(":")[1];
var abi = JSON.parse(contracts[key].abi);
var bin = "0x" + contracts[key].bin;
var contract = web3.eth.contract(abi);
eval("var " + contract_name + "Bin = bin;");
eval("var " + contract_name + "Contract = contract;");
}
kittyStats()
submitContract("KittyBase")
eth.accounts[0]
submitMineContract("KittyBase")
miner.stop()
loadScript("scripts/stats.js")
submitMineContract("KittyBase")
miner.stop()
sleep
loadScript("scripts/ck-workload.js")
submitMineContract("KittyBase")
submitMineContract("KittyAccessControl")
submitMineContract("KittyBase")
submitMineContract("ERC721Metadata")
submitMineContract("KittyAccessControl")
submitMineContract("KittyBase")
submitMineContract("KittyOwnership")
submitMineContract("KittyBreeding")
submitMineContract("KittyMinting")
submitMineContract("KittyCore")
submitMineContract("KittyAccessControl")
exig